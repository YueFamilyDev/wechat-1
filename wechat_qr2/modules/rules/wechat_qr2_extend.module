<?php

/**
 * Implements hook_entity_insert().
 */
function wechat_qr2_extend_entity_insert($entity, $type) {
  watchdog('debug', 7);
//  if ($entity instanceof WechatRequest && $entity->msg_type == 'event') {
//    watchdog('debug', 9);
//    $w = $entity->wrapper();
//    $event = $w->field_event->value();
//    watchdog('$event = $w->field_event->value();', $event);
//    $key = $w->field_event_key->value();
//    watchdog('$key = $w->field_event_key->value();', $key);
//
//    switch ($event) {
//      case 'SCAN': {
//        break;
//      }
//      case 'subscribe': {
//        $key = substr($key, 8);
//        break;
//      }
//    }
//
//    $openid = $entity->openid;
//    $wechat_qr2 = wechat_qr2_load_multiple(FALSE, array('qr_key' => $key));
//    $wechat_qr2 = reset($wechat_qr2);
//    if (!empty($wechat_qr2) && $wechat_qr2 instanceof WechatQr2) {
//
//      $wechat_request = $entity;
//      rules_invoke_event('wechat_qr2_extend_qr_scan_event', $openid, $event, $key, $wechat_request, $wechat_qr2);
//    }
//  }
}

/**
 * Implements hook_rules_event_info().
 */
function wechat_qr2_extend_rules_event_info() {
  return array(
    'wechat_qr2_extend_qr_scan_event' => array(
      'label' => t('微信二维码扫描事件'),
      'group' => t('微信'),
      'variables' => array(
        'openid' => array(
          'type' => 'text',
          'label' => t('OpenId'),
        ),
        'event' => array(
          'type' => 'text',
          'label' => t('事件'),
        ),
        'event_key' => array(
          'type' => 'text',
          'label' => t('事件KEY'),
        ),
        'wechat_request' => array(
          'type' => 'wechat_request',
          'label' => t('请求对象'),
        ),
        'wechat_qr2' => array(
          'type' => 'wechat_qr2',
          'label' => t('二维码对象'),
        ),
      ),
    ),
  );
}